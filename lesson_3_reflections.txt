When would you want to use a remote repository rather than keeping all your work
local?

    A remote repository is always handy whenever your own computer happens to crash...
    As every computer specialist always asks first: When did you last backup your data? ;-)

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    either in order not to show everything of what you are currently working on,
    or to keep from pushing every insignificant little commit to GitHub, cluttering the lines.
    Or just to have no trouble to keep working when you happen to be offline.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    branches are for working on separate features within the same project. 
    Clones are clones of any full repository on either the local machine or GitHub.
    Forks are clones that are produced within GitHub by their own machines.
    So branches are for new features and other development procedures. Forks and Clones are backups and copies of data.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    good question. Maybe this way you can more easily keep track of the solely local changes and better prepare for the results of a push or pull to the remote.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    You would have to get all collaborators into the same room to make that efficient, so you can directly solve contradictory issues.
    It makes it easier for everyone to work remotely and at their own time and find conflicting issues to solve by merging the branches and then only solving those directly.
    
    
When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
